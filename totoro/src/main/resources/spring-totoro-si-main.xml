<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-stream="http://www.springframework.org/schema/integration/stream"
	xsi:schemaLocation="
     http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context-3.2.xsd
     http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
     http://www.springframework.org/schema/integration
	 http://www.springframework.org/schema/integration/spring-integration-2.2.xsd
	 http://www.springframework.org/schema/integration/stream
	 http://www.springframework.org/schema/integration/stream/spring-integration-stream-2.2.xsd">

	<context:mbean-server />
	<context:mbean-export default-domain="railinc"/>
	<context:property-placeholder/>
	<context:annotation-config />
	<tx:annotation-driven />
	
	<context:component-scan base-package="com.railinc.totoro">
	    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/totoro" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>
	
	
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>com.railinc.totoro.domain.RawInboundMessage</value>
				<value>com.railinc.totoro.domain.UserGroup</value>
				<value>com.railinc.totoro.domain.UserGroupMember</value>
				<value>com.railinc.totoro.domain.SourceSystem</value>
				<value>com.railinc.totoro.domain.DataException</value>
				<value>com.railinc.totoro.domain.Task</value>
				<value>com.railinc.totoro.domain.Responsibility</value>
				<value>com.railinc.totoro.domain.Exemption</value>
			</list>
		</property>
		<property name="entityInterceptor">
			<bean class="com.railinc.totoro.domain.AuditListener" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQL5Dialect
             </prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager" p:sessionFactory-ref="sessionFactory"/>



	<bean id="ironMqClient" class="io.iron.ironmq.Client">
		<constructor-arg>
			<value>#{ systemProperties['ironmq.projectid'] }</value>
		</constructor-arg>
		<constructor-arg>
			<value>#{ systemProperties['ironmq.token'] }</value>
		</constructor-arg>
	</bean>
	
	<bean id="qExceptions" factory-bean="ironMqClient" factory-method="queue">
		<constructor-arg>
			<value>exceptions</value>
		</constructor-arg>
	</bean>

    <bean id="ironMqInbound" class="com.railinc.totoro.integration.IronMQInboundChannel" p:queue-ref="qExceptions"/> 

	
	<bean id="xformerRawInboundJsonToDataException" class="com.railinc.totoro.integration.RawInboundMessageToExceptionXFormer" />
	<bean id="interceptorHibernatePersister" class="com.railinc.totoro.integration.HibernatePersister" p:sessionFactory-ref="sessionFactory" />
	


	<!-- ================ START - Iron MQ Outbound Gateway ========================================== -->
	<!-- so, this gateway can be used by services and controllers as it provides a simple interface. -->
	<int:gateway id="exceptionsQueue"
         service-interface="com.railinc.totoro.integration.Queue"
         default-request-channel="mdmExceptionsOutboundSink" />
    
    
    <!-- we want outbound messages to return ASAP -->
    <int:channel id="mdmExceptionsOutboundSink">
    	<!--  i could configure persistence on this, but not for now -->
    	<int:queue />
    </int:channel>
    
    <!-- This service activator takes string messages and pushes them onto the exceptions queue. -->
	<int:service-activator input-channel="mdmExceptionsOutboundSink" ref="qExceptions" method="push" output-channel="nullChannel">
		<!-- because mdmExceptionsOutbound is a queue and not a direct channel, we need to setup a poller -->
		<int:poller fixed-delay="100" time-unit="MILLISECONDS" max-messages-per-poll="100"/>
	</int:service-activator>
	<!-- ================ END - Iron MQ Outbound Gateway ========================================== -->


	<!-- the ironMqInbound object implements MessageSource, so it's polled by this adapter -->
	
    <int:inbound-channel-adapter ref="ironMqInbound" channel="channelIronMqRawMessageSink">
    	<int:poller fixed-delay="5" time-unit="SECONDS" max-messages-per-poll="100" >
    		<int:transactional />
    	</int:poller>
    	
	</int:inbound-channel-adapter>

    <int:channel id="channelIronMqRawMessageSink" datatype="java.lang.String"/>
 


	<!-- Takes a Message with a String payload in and creates a RawInboundMessage object -->
	<int:chain input-channel="channelIronMqRawMessageSink" output-channel="channelRawInboundMessageSink">
		<int:header-enricher>
			<int:header 
				name="#{T(com.railinc.totoro.integration.StringToRawInboundXFormer).SOURCE_HEADER}" 
				value="#{T(com.railinc.totoro.domain.InboundSource).MDMException}" />
		</int:header-enricher>
		<int:transformer>
			<bean class="com.railinc.totoro.integration.StringToRawInboundXFormer"/>
		</int:transformer>
	</int:chain>
	
	<int:channel id="channelRawInboundMessageSink" datatype="com.railinc.totoro.domain.RawInboundMessage">
		<int:queue />
		<int:interceptors>
			<ref bean="interceptorHibernatePersister"/>
		</int:interceptors>
	</int:channel>
	
	<int:chain input-channel="channelRawInboundMessageSink" output-channel="channelXFormedRawInbound">
		<int:poller fixed-delay="100" time-unit="MILLISECONDS" max-messages-per-poll="100">
    		<int:transactional />
		</int:poller>
		<int:transformer ref="xformerRawInboundJsonToDataException" />
	</int:chain>    
	
	<int:channel id="channelXFormedRawInbound"/>
	<int:payload-type-router input-channel="channelXFormedRawInbound" default-output-channel="syserr">
		<int:mapping type="com.railinc.totoro.domain.DataException" channel="channelDataExceptionMessageSink"/>
	</int:payload-type-router>

	<int:channel id="channelDataExceptionMessageSink">
		<int:interceptors>
			<ref bean="interceptorHibernatePersister"/>
		</int:interceptors>
	</int:channel>
	
	<int:service-activator input-channel="channelDataExceptionMessageSink" ref="dataExceptionService" method="updateResponsiblePerson"/>
	<bean id="dataExceptionService" class="com.railinc.totoro.dataexception.DataExceptionServiceImpl"/>
	
	<!--int:bridge input-channel="channelDataExceptionMessageSink" output-channel="sysout"/-->
	
	
	<!-- 	
	<int:outbound-channel-adapter channel="mdmExceptionsInbound" ref="ironMqStorage">
		<int:poller fixed-delay="100" time-unit="MILLISECONDS" max-messages-per-poll="100" />
	</int:outbound-channel-adapter>
	 -->
	 
	<int:channel id="syserr"/>
	<int:channel id="sysout"/>
	<int-stream:stdout-channel-adapter channel="sysout"/>
	<int-stream:stderr-channel-adapter channel="syserr" />
</beans>